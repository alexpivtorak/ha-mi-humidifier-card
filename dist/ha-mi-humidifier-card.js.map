{"version":3,"file":"ha-mi-humidifier-card.js","sources":["../src/ha-mi-humidifier-card.ts"],"sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { HomeAssistant } from 'custom-card-helpers';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    customCards: Array<{\r\n      type: string;\r\n      name: string;\r\n      description: string;\r\n    }>;\r\n  }\r\n}\r\n\r\n// Make sure customElements is defined\r\nif (!window.customElements.get('ha-mi-humidifier-card')) {\r\n  window.customCards = window.customCards || [];\r\n  window.customCards.push({\r\n    type: \"ha-mi-humidifier-card\",\r\n    name: \"Mi Humidifier Card\",\r\n    description: \"A custom card for Mi Humidifier\"\r\n  });\r\n\r\n  interface HumidifierCardConfig {\r\n    type: string;\r\n    entity: string;\r\n    show_image?: boolean;\r\n  }\r\n\r\n  @customElement('ha-mi-humidifier-card')\r\n  class MiHumidifierCard extends LitElement {\r\n    @property({ attribute: false }) public hass!: HomeAssistant;\r\n    @property() public config!: HumidifierCardConfig;\r\n    @property() private isLoading = false;\r\n    @property() private isTargetLoading = false;\r\n    @property() private pendingTargetHumidity: number | null = null;\r\n    private debounceTimeout: NodeJS.Timeout | null = null;\r\n    private targetDebounceTimeout: NodeJS.Timeout | null = null;\r\n\r\n    static getStubConfig(): HumidifierCardConfig {\r\n      return {\r\n        type: 'custom:ha-mi-humidifier-card',\r\n        entity: 'humidifier.deerma_jsq5_8f1b_humidifier',\r\n        show_image: true\r\n      };\r\n    }\r\n\r\n    setConfig(config: HumidifierCardConfig) {\r\n      if (!config.entity) {\r\n        throw new Error('Please define an entity');\r\n      }\r\n      this.config = {\r\n        show_image: true,\r\n        ...config\r\n      };\r\n    }\r\n\r\n    private async handlePowerClick() {\r\n      if (!this.config.entity || this.isLoading) return;\r\n      \r\n      // Clear any pending debounce\r\n      if (this.debounceTimeout) {\r\n        clearTimeout(this.debounceTimeout);\r\n      }\r\n\r\n      this.debounceTimeout = setTimeout(async () => {\r\n        try {\r\n          this.isLoading = true;\r\n          const state = this.hass.states[this.config.entity];\r\n          const newState = state.state === 'on' ? 'off' : 'on';\r\n          const service = newState === 'on' ? 'turn_on' : 'turn_off';\r\n          \r\n          // Optimistically update the state\r\n          const oldState = { ...this.hass.states[this.config.entity] };\r\n          this.hass.states[this.config.entity] = {\r\n            ...oldState,\r\n            state: newState,\r\n          };\r\n          this.requestUpdate();\r\n\r\n          await this.hass.callService('humidifier', service, {\r\n            entity_id: this.config.entity,\r\n          });\r\n        } catch (error) {\r\n          console.error('Failed to toggle power:', error);\r\n        } finally {\r\n          this.isLoading = false;\r\n          this.debounceTimeout = null;\r\n        }\r\n      }, 100); // 100ms debounce\r\n    }\r\n\r\n    private async handleTargetChange(change: number) {\r\n      if (!this.config.entity || this.isTargetLoading) return;\r\n      \r\n      // Clear any pending debounce\r\n      if (this.targetDebounceTimeout) {\r\n        clearTimeout(this.targetDebounceTimeout);\r\n      }\r\n\r\n      this.targetDebounceTimeout = setTimeout(async () => {\r\n        try {\r\n          this.isTargetLoading = true;\r\n          const stateObj = this.hass.states[this.config.entity];\r\n          \r\n          // Get current target from either pending or state\r\n          const currentTarget = this.pendingTargetHumidity !== null \r\n            ? this.pendingTargetHumidity \r\n            : (stateObj.attributes.target_humidity || 50);\r\n          \r\n          // Calculate new target with bounds check (40-80 range)\r\n          const newTarget = Math.min(80, Math.max(40, currentTarget + change));\r\n          \r\n          // Only update if the value actually changed\r\n          if (newTarget !== currentTarget) {\r\n            // Update pending target humidity for optimistic UI update\r\n            this.pendingTargetHumidity = newTarget;\r\n            this.requestUpdate();\r\n\r\n            await this.hass.callService('humidifier', 'set_humidity', {\r\n              entity_id: this.config.entity,\r\n              humidity: newTarget\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to change target humidity:', error);\r\n          // Reset pending target on error\r\n          this.pendingTargetHumidity = null;\r\n          this.requestUpdate();\r\n        } finally {\r\n          this.isTargetLoading = false;\r\n          this.targetDebounceTimeout = null;\r\n        }\r\n      }, 100); // 100ms debounce\r\n    }\r\n\r\n    static get styles() {\r\n      return css`\r\n        ha-card {\r\n          height: 100%;\r\n          background: var(--ha-card-background, var(--card-background-color, #1c1c1c));\r\n          border-radius: var(--ha-card-border-radius, 12px);\r\n          padding: 16px;\r\n          box-sizing: border-box;\r\n        }\r\n        .card-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          height: 100%;\r\n        }\r\n        .header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 16px;\r\n        }\r\n        .title {\r\n          font-size: 1.1em;\r\n          font-weight: 500;\r\n          color: var(--primary-text-color, #fff);\r\n          opacity: 0.9;\r\n        }\r\n        .status {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 16px;\r\n        }\r\n        .humidity-display {\r\n          display: flex;\r\n          align-items: baseline;\r\n          gap: 4px;\r\n        }\r\n        .humidity-value {\r\n          font-size: 2em;\r\n          font-weight: 500;\r\n          color: var(--primary-text-color, #fff);\r\n          line-height: 1;\r\n        }\r\n        .humidity-unit {\r\n          font-size: 1.2em;\r\n          color: var(--primary-text-color, #fff);\r\n          opacity: 0.8;\r\n        }\r\n        .current-humidity {\r\n          font-size: 1.1em;\r\n          color: var(--primary-text-color, #fff);\r\n          opacity: 0.6;\r\n        }\r\n        .state-text {\r\n          font-size: 1.1em;\r\n          color: var(--primary-text-color, #fff);\r\n          opacity: 0.9;\r\n          padding: 4px 12px;\r\n          border-radius: 12px;\r\n          background: var(--primary-color, #0984ff);\r\n        }\r\n        .state-text[inactive] {\r\n          background: var(--disabled-color, #666);\r\n        }\r\n        .slider-container {\r\n          width: 100%;\r\n          margin: 16px 0;\r\n        }\r\n        .slider {\r\n          -webkit-appearance: none;\r\n          width: 100%;\r\n          height: 4px;\r\n          border-radius: 2px;\r\n          background: var(--primary-color, #0984ff);\r\n          outline: none;\r\n          opacity: 0.7;\r\n          transition: opacity .2s;\r\n        }\r\n        .slider:hover {\r\n          opacity: 1;\r\n        }\r\n        .slider::-webkit-slider-thumb {\r\n          -webkit-appearance: none;\r\n          appearance: none;\r\n          width: 16px;\r\n          height: 16px;\r\n          border-radius: 50%;\r\n          background: var(--primary-color, #0984ff);\r\n          cursor: pointer;\r\n          border: 2px solid var(--card-background-color, #1c1c1c);\r\n          box-shadow: 0 0 0 1px var(--primary-color, #0984ff);\r\n        }\r\n        .slider::-moz-range-thumb {\r\n          width: 16px;\r\n          height: 16px;\r\n          border-radius: 50%;\r\n          background: var(--primary-color, #0984ff);\r\n          cursor: pointer;\r\n          border: 2px solid var(--card-background-color, #1c1c1c);\r\n          box-shadow: 0 0 0 1px var(--primary-color, #0984ff);\r\n        }\r\n        .slider:disabled {\r\n          opacity: 0.3;\r\n          cursor: not-allowed;\r\n        }\r\n        .controls {\r\n          display: flex;\r\n          gap: 20px;\r\n          margin-top: 8px;\r\n          justify-content: center;\r\n        }\r\n        .control-button {\r\n          width: 36px;\r\n          height: 36px;\r\n          border-radius: 50%;\r\n          border: 2px solid var(--primary-color, #0984ff);\r\n          background: transparent;\r\n          color: var(--primary-color, #0984ff);\r\n          cursor: pointer;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          font-size: 1.5em;\r\n          transition: all 0.2s ease;\r\n          padding: 0;\r\n          line-height: 1;\r\n        }\r\n        .control-button:hover {\r\n          background: var(--primary-color, #0984ff);\r\n          color: var(--card-background-color, #1c1c1c);\r\n        }\r\n        .control-button[disabled] {\r\n          opacity: 0.3;\r\n          cursor: not-allowed;\r\n        }\r\n        .power-button {\r\n          width: 100%;\r\n          padding: 14px;\r\n          border: none;\r\n          border-radius: 8px;\r\n          background: var(--primary-color, #0984ff);\r\n          color: var(--primary-color-text, #fff);\r\n          cursor: pointer;\r\n          margin-top: 24px;\r\n          transition: all 0.2s ease;\r\n          font-size: 1em;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.5px;\r\n        }\r\n        .power-button:hover {\r\n          opacity: 0.9;\r\n          transform: scale(0.99);\r\n        }\r\n        .power-button[inactive] {\r\n          background: var(--disabled-color, #666);\r\n        }\r\n        .power-button[loading] {\r\n          pointer-events: none;\r\n          opacity: 0.7;\r\n          position: relative;\r\n          overflow: hidden;\r\n        }\r\n        .power-button[loading]::after {\r\n          content: '';\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 2px;\r\n          background: var(--primary-color-text, #fff);\r\n          bottom: 0;\r\n          left: -100%;\r\n          animation: loading 1s infinite linear;\r\n        }\r\n        @keyframes loading {\r\n          from { left: -100%; }\r\n          to { left: 100%; }\r\n        }\r\n        .device-image {\r\n          width: 100%;\r\n          max-width: 200px;\r\n          height: auto;\r\n          margin: 0 auto 16px;\r\n          display: block;\r\n          filter: brightness(0.9) contrast(1.1);\r\n        }\r\n        .controls-row {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-top: 16px;\r\n          padding: 8px;\r\n          background: rgba(var(--rgb-primary-color, 9, 132, 255), 0.1);\r\n          border-radius: 8px;\r\n        }\r\n        \r\n        .control-label {\r\n          font-size: 0.9em;\r\n          color: var(--primary-text-color, #fff);\r\n          opacity: 0.9;\r\n        }\r\n\r\n        .toggle-button {\r\n          background: none;\r\n          border: 2px solid var(--primary-color, #0984ff);\r\n          border-radius: 12px;\r\n          padding: 4px 8px;\r\n          color: var(--primary-color, #0984ff);\r\n          cursor: pointer;\r\n          transition: all 0.2s ease;\r\n        }\r\n\r\n        .toggle-button[active] {\r\n          background: var(--primary-color, #0984ff);\r\n          color: var(--primary-color-text, #fff);\r\n        }\r\n\r\n        .toggle-button:hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        .water-warning {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          margin-top: 8px;\r\n          padding: 8px 12px;\r\n          background: rgba(var(--rgb-warning-color, 255, 152, 0), 0.2);\r\n          border-radius: 8px;\r\n          color: var(--warning-color, #ff9800);\r\n          font-size: 0.9em;\r\n        }\r\n\r\n        .water-warning svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n\r\n        .water-level {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          margin-top: 16px;\r\n          padding: 8px 12px;\r\n          background: rgba(var(--rgb-primary-color, 9, 132, 255), 0.1);\r\n          border-radius: 8px;\r\n        }\r\n\r\n        .water-level svg {\r\n          width: 24px;\r\n          height: 24px;\r\n          color: var(--primary-color, #0984ff);\r\n        }\r\n\r\n        .water-level-text {\r\n          color: var(--primary-text-color, #fff);\r\n          font-size: 0.9em;\r\n        }\r\n\r\n        .water-level[data-state=\"empty\"] {\r\n          background: rgba(var(--rgb-error-color, 244, 67, 54), 0.1);\r\n        }\r\n        \r\n        .water-level[data-state=\"empty\"] svg {\r\n          color: var(--error-color, #f44336);\r\n        }\r\n\r\n        .image-error {\r\n          text-align: center;\r\n          padding: 16px;\r\n          background: rgba(var(--rgb-warning-color, 255, 152, 0), 0.1);\r\n          border-radius: 8px;\r\n          color: var(--warning-color, #ff9800);\r\n          margin: 16px 0;\r\n        }\r\n\r\n        .image-container {\r\n          width: 100%;\r\n          margin-bottom: 16px;\r\n          text-align: center;\r\n        }\r\n        .image-container img {\r\n          max-width: 200px;\r\n          height: auto;\r\n          border-radius: 8px;\r\n        }\r\n      `;\r\n    }\r\n\r\n    private handleSliderChange(e: Event) {\r\n      const value = Number((e.target as HTMLInputElement).value);\r\n      if (this.config.entity && !this.isTargetLoading) {\r\n        this.handleTargetChange(value - (this.pendingTargetHumidity ?? this.hass.states[this.config.entity].attributes.target_humidity ?? 50));\r\n      }\r\n    }\r\n\r\n    private _renderImage() {\r\n      const imagePath = new URL('./humidifier-1.png', import.meta.url).href;\r\n      \r\n      return html`\r\n        <img \r\n          src=\"${imagePath}\"\r\n          alt=\"Mi Humidifier\"\r\n          class=\"device-image\"\r\n          @error=${(e) => {\r\n            const img = e.target;\r\n            console.log('❌ Failed to load image. Please check:');\r\n            console.log('   humidifier-1.png');\r\n            console.log('Current src:', img.src);\r\n            img.style.display = 'none';\r\n            const container = img.parentElement;\r\n            if (container) {\r\n              const error = document.createElement('div');\r\n              error.className = 'image-error';\r\n              error.textContent = '⚠️ Image not found';\r\n              container.appendChild(error);\r\n            }\r\n          }}\r\n        />\r\n      `;\r\n    }\r\n\r\n    protected render() {\r\n      if (!this.config || !this.hass || !this.config.entity) {\r\n        return html``;\r\n      }\r\n\r\n      const stateObj = this.hass.states[this.config.entity];\r\n      if (!stateObj) {\r\n        return html`\r\n          <ha-card>\r\n            <div class=\"card-content\">\r\n              <div class=\"not-found\">Entity not found: ${this.config.entity}</div>\r\n            </div>\r\n          </ha-card>\r\n        `;\r\n      }\r\n\r\n      const currentHumidity = stateObj.attributes.current_humidity || 0;\r\n      const targetHumidity = this.pendingTargetHumidity !== null \r\n        ? this.pendingTargetHumidity \r\n        : (stateObj.attributes.target_humidity || 50);\r\n      const isOn = stateObj.state === 'on';\r\n\r\n      return html`\r\n        <ha-card>\r\n          <div class=\"card-content\">\r\n            ${this.config.show_image ? this._renderImage() : ''}\r\n            <div class=\"header\">\r\n              <div class=\"title\">${stateObj.attributes.friendly_name || this.config.entity}</div>\r\n              <div class=\"state-text\" ?inactive=${!isOn}>${isOn ? 'ON' : 'OFF'}</div>\r\n            </div>\r\n            \r\n            <div class=\"status\">\r\n              <div class=\"humidity-display\">\r\n                <span class=\"humidity-value\">${targetHumidity}</span>\r\n                <span class=\"humidity-unit\">%</span>\r\n              </div>\r\n              <div class=\"current-humidity\">${currentHumidity}%</div>\r\n            </div>\r\n\r\n            <div class=\"slider-container\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"40\"\r\n                max=\"80\"\r\n                step=\"5\"\r\n                .value=${targetHumidity}\r\n                class=\"slider\"\r\n                @change=${this.handleSliderChange}\r\n                ?disabled=${!isOn}\r\n              >\r\n            </div>\r\n\r\n            <div class=\"controls\">\r\n              <button \r\n                class=\"control-button\"\r\n                @click=${() => this.handleTargetChange(-5)}\r\n                ?disabled=${!isOn}\r\n              >\r\n                -\r\n              </button>\r\n              <button \r\n                class=\"control-button\"\r\n                @click=${() => this.handleTargetChange(5)}\r\n                ?disabled=${!isOn}\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"water-level\" data-state=${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' ? 'empty' : 'ok'}>\r\n              <svg viewBox=\"0 0 24 24\">\r\n                <path fill=\"currentColor\" d=\"M12,3.77L11.25,4.61C11.25,4.61 9.97,6.06 8.68,7.94C7.39,9.82 6,12.07 6,14.23A6,6 0 0,0 12,20.23A6,6 0 0,0 18,14.23C18,12.07 16.61,9.82 15.32,7.94C14.03,6.06 12.75,4.61 12.75,4.61L12,3.77M12,6.9C12.44,7.42 12.84,7.85 13.68,9.07C14.89,10.83 16,13.07 16,14.23C16,16.45 14.22,18.23 12,18.23C9.78,18.23 8,16.45 8,14.23C8,13.07 9.11,10.83 10.32,9.07C11.16,7.85 11.56,7.42 12,6.9Z\" />\r\n              </svg>\r\n              <span class=\"water-level-text\">\r\n                ${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' \r\n                  ? 'Tank Empty' \r\n                  : 'Tank OK'}\r\n              </span>\r\n            </div>\r\n\r\n            ${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' ? html`\r\n              <div class=\"water-warning\">\r\n                <svg viewBox=\"0 0 24 24\">\r\n                  <path fill=\"currentColor\" d=\"M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z\" />\r\n                </svg>\r\n                Water tank needs refilling\r\n              </div>\r\n            ` : ''}\r\n\r\n            <button \r\n              class=\"power-button\"\r\n              @click=${this.handlePowerClick}\r\n              ?inactive=${!isOn}\r\n              ?loading=${this.isLoading}\r\n              ?disabled=${this.isLoading}\r\n            >\r\n              ${isOn ? 'Turn Off' : 'Turn On'}\r\n            </button>\r\n          </div>\r\n        </ha-card>\r\n      `;\r\n    }\r\n  }\r\n}\r\n"],"names":["MiHumidifierCard","LitElement","config","__spreadValues","__async","newState","service","oldState","__spreadProps","error","change","stateObj","currentTarget","newTarget","css","e","value","_b","_a","imagePath","html","img","container","currentHumidity","targetHumidity","isOn","_c","__decorateClass","property","customElement"],"mappings":"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"}
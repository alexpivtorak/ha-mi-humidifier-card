{"version":3,"file":"mi-humidifier-card.js","sources":["src/ha-mi-humidifier-card.ts"],"sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { HomeAssistant } from 'custom-card-helpers';\n\ndeclare global {\n  interface Window {\n    customCards: Array<{\n      type: string;\n      name: string;\n      description: string;\n    }>;\n  }\n}\n\ninterface HumidifierCardConfig {\n  type: string;\n  entity: string;\n  show_image?: boolean;\n}\n\n@customElement('mi-humidifier-card')\nexport class MiHumidifierCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n  @property() public config!: HumidifierCardConfig;\n  @property() private isLoading = false;\n  @property() private isTargetLoading = false;\n  @property() private pendingTargetHumidity: number | null = null;\n  private debounceTimeout: NodeJS.Timeout | null = null;\n  private targetDebounceTimeout: NodeJS.Timeout | null = null;\n\n  static getStubConfig(): HumidifierCardConfig {\n    return {\n      type: 'mi-humidifier-card',\n      entity: 'humidifier.deerma_jsq5_8f1b_humidifier',\n      show_image: true\n    };\n  }\n\n  setConfig(config: HumidifierCardConfig) {\n    if (!config.entity) {\n      throw new Error('Please define an entity');\n    }\n    this.config = {\n      show_image: true,\n      ...config\n    };\n  }\n\n  private async handlePowerClick() {\n    if (!this.config.entity || this.isLoading) return;\n    \n    // Clear any pending debounce\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.debounceTimeout = setTimeout(async () => {\n      try {\n        this.isLoading = true;\n        const state = this.hass.states[this.config.entity];\n        const newState = state.state === 'on' ? 'off' : 'on';\n        const service = newState === 'on' ? 'turn_on' : 'turn_off';\n        \n        // Optimistically update the state\n        const oldState = { ...this.hass.states[this.config.entity] };\n        this.hass.states[this.config.entity] = {\n          ...oldState,\n          state: newState,\n        };\n        this.requestUpdate();\n\n        await this.hass.callService('humidifier', service, {\n          entity_id: this.config.entity,\n        });\n      } catch (error) {\n        console.error('Failed to toggle power:', error);\n      } finally {\n        this.isLoading = false;\n        this.debounceTimeout = null;\n      }\n    }, 100); // 100ms debounce\n  }\n\n  private async handleTargetChange(change: number) {\n    if (!this.config.entity || this.isTargetLoading) return;\n    \n    // Clear any pending debounce\n    if (this.targetDebounceTimeout) {\n      clearTimeout(this.targetDebounceTimeout);\n    }\n\n    this.targetDebounceTimeout = setTimeout(async () => {\n      try {\n        this.isTargetLoading = true;\n        const stateObj = this.hass.states[this.config.entity];\n        \n        // Get current target from either pending or state\n        const currentTarget = this.pendingTargetHumidity !== null \n          ? this.pendingTargetHumidity \n          : (stateObj.attributes.target_humidity || 50);\n        \n        // Calculate new target with bounds check (40-80 range)\n        const newTarget = Math.min(80, Math.max(40, currentTarget + change));\n        \n        // Only update if the value actually changed\n        if (newTarget !== currentTarget) {\n          // Update pending target humidity for optimistic UI update\n          this.pendingTargetHumidity = newTarget;\n          this.requestUpdate();\n\n          await this.hass.callService('humidifier', 'set_humidity', {\n            entity_id: this.config.entity,\n            humidity: newTarget\n          });\n        }\n      } catch (error) {\n        console.error('Failed to change target humidity:', error);\n        // Reset pending target on error\n        this.pendingTargetHumidity = null;\n        this.requestUpdate();\n      } finally {\n        this.isTargetLoading = false;\n        this.targetDebounceTimeout = null;\n      }\n    }, 100); // 100ms debounce\n  }\n\n  static get styles() {\n    return css`\n      ha-card {\n        height: 100%;\n        background: var(--ha-card-background, var(--card-background-color, #1c1c1c));\n        border-radius: var(--ha-card-border-radius, 12px);\n        padding: 16px;\n        box-sizing: border-box;\n      }\n      .card-content {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n      .header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 16px;\n      }\n      .title {\n        font-size: 1.1em;\n        font-weight: 500;\n        color: var(--primary-text-color, #fff);\n        opacity: 0.9;\n      }\n      .status {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 16px;\n      }\n      .humidity-display {\n        display: flex;\n        align-items: baseline;\n        gap: 4px;\n      }\n      .humidity-value {\n        font-size: 2em;\n        font-weight: 500;\n        color: var(--primary-text-color, #fff);\n        line-height: 1;\n      }\n      .humidity-unit {\n        font-size: 1.2em;\n        color: var(--primary-text-color, #fff);\n        opacity: 0.8;\n      }\n      .current-humidity {\n        font-size: 1.1em;\n        color: var(--primary-text-color, #fff);\n        opacity: 0.6;\n      }\n      .state-text {\n        font-size: 1.1em;\n        color: var(--primary-text-color, #fff);\n        opacity: 0.9;\n        padding: 4px 12px;\n        border-radius: 12px;\n        background: var(--primary-color, #0984ff);\n      }\n      .state-text[inactive] {\n        background: var(--disabled-color, #666);\n      }\n      .slider-container {\n        width: 100%;\n        margin: 16px 0;\n      }\n      .slider {\n        -webkit-appearance: none;\n        width: 100%;\n        height: 4px;\n        border-radius: 2px;\n        background: var(--primary-color, #0984ff);\n        outline: none;\n        opacity: 0.7;\n        transition: opacity .2s;\n      }\n      .slider:hover {\n        opacity: 1;\n      }\n      .slider::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 16px;\n        height: 16px;\n        border-radius: 50%;\n        background: var(--primary-color, #0984ff);\n        cursor: pointer;\n        border: 2px solid var(--card-background-color, #1c1c1c);\n        box-shadow: 0 0 0 1px var(--primary-color, #0984ff);\n      }\n      .slider::-moz-range-thumb {\n        width: 16px;\n        height: 16px;\n        border-radius: 50%;\n        background: var(--primary-color, #0984ff);\n        cursor: pointer;\n        border: 2px solid var(--card-background-color, #1c1c1c);\n        box-shadow: 0 0 0 1px var(--primary-color, #0984ff);\n      }\n      .slider:disabled {\n        opacity: 0.3;\n        cursor: not-allowed;\n      }\n      .controls {\n        display: flex;\n        gap: 20px;\n        margin-top: 8px;\n        justify-content: center;\n      }\n      .control-button {\n        width: 36px;\n        height: 36px;\n        border-radius: 50%;\n        border: 2px solid var(--primary-color, #0984ff);\n        background: transparent;\n        color: var(--primary-color, #0984ff);\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 1.5em;\n        transition: all 0.2s ease;\n        padding: 0;\n        line-height: 1;\n      }\n      .control-button:hover {\n        background: var(--primary-color, #0984ff);\n        color: var(--card-background-color, #1c1c1c);\n      }\n      .control-button[disabled] {\n        opacity: 0.3;\n        cursor: not-allowed;\n      }\n      .power-button {\n        width: 100%;\n        padding: 14px;\n        border: none;\n        border-radius: 8px;\n        background: var(--primary-color, #0984ff);\n        color: var(--primary-color-text, #fff);\n        cursor: pointer;\n        margin-top: 24px;\n        transition: all 0.2s ease;\n        font-size: 1em;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n      }\n      .power-button:hover {\n        opacity: 0.9;\n        transform: scale(0.99);\n      }\n      .power-button[inactive] {\n        background: var(--disabled-color, #666);\n      }\n      .power-button[loading] {\n        pointer-events: none;\n        opacity: 0.7;\n        position: relative;\n        overflow: hidden;\n      }\n      .power-button[loading]::after {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 2px;\n        background: var(--primary-color-text, #fff);\n        bottom: 0;\n        left: -100%;\n        animation: loading 1s infinite linear;\n      }\n      @keyframes loading {\n        from { left: -100%; }\n        to { left: 100%; }\n      }\n      .device-image {\n        width: 100%;\n        max-width: 200px;\n        height: 200px;\n        margin: 0 auto 16px;\n        display: block;\n        background: url(\"/hacsfiles/ha-mi-humidifier-card/humidifier-1.png\") no-repeat center;\n        background-size: contain;\n      }\n      .controls-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: 16px;\n        padding: 8px;\n        background: rgba(var(--rgb-primary-color, 9, 132, 255), 0.1);\n        border-radius: 8px;\n      }\n      \n      .control-label {\n        font-size: 0.9em;\n        color: var(--primary-text-color, #fff);\n        opacity: 0.9;\n      }\n\n      .toggle-button {\n        background: none;\n        border: 2px solid var(--primary-color, #0984ff);\n        border-radius: 12px;\n        padding: 4px 8px;\n        color: var(--primary-color, #0984ff);\n        cursor: pointer;\n        transition: all 0.2s ease;\n      }\n\n      .toggle-button[active] {\n        background: var(--primary-color, #0984ff);\n        color: var(--primary-color-text, #fff);\n      }\n\n      .toggle-button:hover {\n        opacity: 0.8;\n      }\n\n      .water-warning {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin-top: 8px;\n        padding: 8px 12px;\n        background: rgba(var(--rgb-warning-color, 255, 152, 0), 0.2);\n        border-radius: 8px;\n        color: var(--warning-color, #ff9800);\n        font-size: 0.9em;\n      }\n\n      .water-warning svg {\n        width: 20px;\n        height: 20px;\n      }\n\n      .water-level {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin-top: 16px;\n        padding: 8px 12px;\n        background: rgba(var(--rgb-primary-color, 9, 132, 255), 0.1);\n        border-radius: 8px;\n      }\n\n      .water-level svg {\n        width: 24px;\n        height: 24px;\n        color: var(--primary-color, #0984ff);\n      }\n\n      .water-level-text {\n        color: var(--primary-text-color, #fff);\n        font-size: 0.9em;\n      }\n\n      .water-level[data-state=\"empty\"] {\n        background: rgba(var(--rgb-error-color, 244, 67, 54), 0.1);\n      }\n      \n      .water-level[data-state=\"empty\"] svg {\n        color: var(--error-color, #f44336);\n      }\n\n      .image-error {\n        text-align: center;\n        padding: 16px;\n        background: rgba(var(--rgb-warning-color, 255, 152, 0), 0.1);\n        border-radius: 8px;\n        color: var(--warning-color, #ff9800);\n        margin: 16px 0;\n      }\n\n      .image-container {\n        width: 100%;\n        margin-bottom: 16px;\n        text-align: center;\n      }\n      .image-container img {\n        max-width: 200px;\n        height: auto;\n        border-radius: 8px;\n      }\n    `;\n  }\n\n  private handleSliderChange(e: Event) {\n    const value = Number((e.target as HTMLInputElement).value);\n    if (this.config.entity && !this.isTargetLoading) {\n      this.handleTargetChange(value - (this.pendingTargetHumidity ?? this.hass.states[this.config.entity].attributes.target_humidity ?? 50));\n    }\n  }\n\n  private _renderImage() {\n    return html`<div class=\"device-image\"></div>`;\n  }\n\n  protected render() {\n    if (!this.config || !this.hass || !this.config.entity) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this.config.entity];\n    if (!stateObj) {\n      return html`\n        <ha-card>\n          <div class=\"card-content\">\n            <div class=\"not-found\">Entity not found: ${this.config.entity}</div>\n          </div>\n        </ha-card>\n      `;\n    }\n\n    const currentHumidity = stateObj.attributes.current_humidity || 0;\n    const targetHumidity = this.pendingTargetHumidity !== null \n      ? this.pendingTargetHumidity \n      : (stateObj.attributes.target_humidity || 50);\n    const isOn = stateObj.state === 'on';\n\n    return html`\n      <ha-card>\n        <div class=\"card-content\">\n          ${this.config.show_image ? this._renderImage() : ''}\n          <div class=\"header\">\n            <div class=\"title\">${stateObj.attributes.friendly_name || this.config.entity}</div>\n            <div class=\"state-text\" ?inactive=${!isOn}>${isOn ? 'ON' : 'OFF'}</div>\n          </div>\n          \n          <div class=\"status\">\n            <div class=\"humidity-display\">\n              <span class=\"humidity-value\">${targetHumidity}</span>\n              <span class=\"humidity-unit\">%</span>\n            </div>\n            <div class=\"current-humidity\">${currentHumidity}%</div>\n          </div>\n\n          <div class=\"slider-container\">\n            <input\n              type=\"range\"\n              min=\"40\"\n              max=\"80\"\n              step=\"5\"\n              .value=${targetHumidity}\n              class=\"slider\"\n              @change=${this.handleSliderChange}\n              ?disabled=${!isOn}\n            >\n          </div>\n\n          <div class=\"controls\">\n            <button \n              class=\"control-button\"\n              @click=${() => this.handleTargetChange(-5)}\n              ?disabled=${!isOn}\n            >\n              -\n            </button>\n            <button \n              class=\"control-button\"\n              @click=${() => this.handleTargetChange(5)}\n              ?disabled=${!isOn}\n            >\n              +\n            </button>\n          </div>\n\n          <div class=\"water-level\" data-state=${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' ? 'empty' : 'ok'}>\n            <svg viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M12,3.77L11.25,4.61C11.25,4.61 9.97,6.06 8.68,7.94C7.39,9.82 6,12.07 6,14.23A6,6 0 0,0 12,20.23A6,6 0 0,0 18,14.23C18,12.07 16.61,9.82 15.32,7.94C14.03,6.06 12.75,4.61 12.75,4.61L12,3.77M12,6.9C12.44,7.42 12.84,7.85 13.68,9.07C14.89,10.83 16,13.07 16,14.23C16,16.45 14.22,18.23 12,18.23C9.78,18.23 8,16.45 8,14.23C8,13.07 9.11,10.83 10.32,9.07C11.16,7.85 11.56,7.42 12,6.9Z\" />\n            </svg>\n            <span class=\"water-level-text\">\n              ${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' \n                ? 'Tank Empty' \n                : 'Tank OK'}\n            </span>\n          </div>\n\n          ${this.hass.states[`binary_sensor.${this.config.entity.split('.')[1]}_water_shortage_fault`]?.state === 'on' ? html`\n            <div class=\"water-warning\">\n              <svg viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z\" />\n              </svg>\n              Water tank needs refilling\n            </div>\n          ` : ''}\n\n          <button \n            class=\"power-button\"\n            @click=${this.handlePowerClick}\n            ?inactive=${!isOn}\n            ?loading=${this.isLoading}\n            ?disabled=${this.isLoading}\n          >\n            ${isOn ? 'Turn Off' : 'Turn On'}\n          </button>\n        </div>\n      </ha-card>\n    `;\n  }\n}\n\n// Register the card\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: \"mi-humidifier-card\",\n  name: \"Mi Humidifier Card\",\n  description: \"A custom card for Mi Humidifier\"\n});\n"],"names":["MiHumidifierCard","LitElement","config","__spreadValues","__async","newState","service","oldState","__spreadProps","error","change","stateObj","currentTarget","newTarget","css","e","value","_b","_a","html","currentHumidity","targetHumidity","isOn","_c","__decorateClass","property","customElement"],"mappings":"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"}